package com.project1;

import com.google.gson.Gson;
import org.json.JSONArray;
import org.json.JSONObject;

import java.net.HttpURLConnection;
import java.net.URI;
import java.net.http.HttpClient;
import java.net.http.HttpRequest;
import java.net.http.HttpResponse;
import java.util.ArrayList;
import java.util.List;

public class HttpUtilAlbum {
    static final String API_URL = "https://jsonplaceholder.typicode.com/albums";

    public static void getAlbum() {
        HttpClient httpClient = HttpClient.newHttpClient();

        //send get request
        try {
            HttpRequest getRequest = HttpRequest.newBuilder()
                    .uri(new URI(API_URL))
                    .GET()
                    .build();
            HttpResponse<String> getResponse = httpClient.send(getRequest, HttpResponse.BodyHandlers.ofString());
            int gettStatusCode = getResponse.statusCode();
            System.out.println("==get status code+++++ =" + gettStatusCode);
            String getResponseString = getResponse.body();
            List<Album> albumsObj = parseAlbumResponse(getResponseString);
            System.out.println("==get albumsObj count+++++ =" + albumsObj.size());
        } catch (Exception e) {
            System.out.println("get failed!!!");
            e.printStackTrace();
        }
    }

    /* two different ways to parse the json string*/
    public static List<Album> parseAlbumResponse(String responseBody) {
        List<Album> albumList = new ArrayList();
        JSONArray albums = new JSONArray(responseBody);
        System.out.println("parsing json string.....");

        for (int i=0; i<albums.length(); i++) {
            JSONObject album = albums.getJSONObject(i);
            int id = album.getInt("id");
            int userId = album.getInt("userId");
            String title = album.getString("title");
            Album albumObj = new Album(id,title,userId);
            albumList.add(albumObj);
        }
        return albumList;
    }

    public static List<Album> parseAlbumResponse_secondOption(String responseBody) {
        List<Album> albumList = new ArrayList();
        JSONArray albums = new JSONArray(responseBody);
        Gson gson = new Gson();

        for (int i = 0; i < albums.length(); i++) {
            JSONObject album = albums.getJSONObject(i);
            //convert to Album object
            Album album1 = gson.fromJson(album.toString(), Album.class);
            albumList.add(album1);
        }
        return albumList;
    }


    public static void createAlbum() {

        Album album = new Album();
        //album.setId(102); //id is generated by the BE in the post command
        album.setUserId(1);
        album.setTitle("101 title=555556666==");

        try {
            //using Gson
            //Gson gson = new Gson();
            //String jsonRequest = gson.toJson(album);

            //using org.json
            JSONObject jsonObject = new JSONObject(album);
            String jsonRequest = jsonObject.toString();

            System.out.println("request input = " + jsonRequest);
            HttpRequest postRequest = HttpRequest.newBuilder()
                    .uri(new URI(API_URL))
                    .setHeader("Content-type", "application/json")
                    .POST(HttpRequest.BodyPublishers.ofString(jsonRequest))
                    .build();

            HttpClient httpClient = HttpClient.newHttpClient();
            HttpResponse<String> postResponse = null;

            postResponse = httpClient.send(postRequest, HttpResponse.BodyHandlers.ofString());

            String postResponseString = postResponse.body();
            System.out.println("==post response =");
            System.out.println(postResponseString);
            //using Gson
            //Album album2 = gson.fromJson(postResponseString, Album.class);

            //using org.json
            JSONObject albumJson = new JSONObject(postResponseString);
            int id = albumJson.getInt("id");
            int userId = albumJson.getInt("userId");
            String title = albumJson.getString("title");
            Album album2 = new Album(id,title,userId);

            System.out.println("==Album2 title =" + album2.getTitle());
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

}
